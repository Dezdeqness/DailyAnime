def Group(closure) {
    closure.delegate = dependencies
    return closure
}

ext {
    dagger = Group {
        implementation(libs.dagger.dagger)
        ksp(libs.dagger.compilier)
    }

    network = Group {
        implementation(libs.square.okhttp)
        implementation(libs.square.logging)
        implementation(libs.square.retrofit)
        implementation(libs.square.moshi)
        implementation(libs.square.scalars)
        implementation(libs.apollo.runtime)
    }

    chucker = Group {
        debugImplementation(libs.chucker.library)
        releaseImplementation(libs.chucker.noop)
        qaImplementation(libs.chucker.library)
    }

    glide = Group {
        implementation(libs.bumptech.glide)
        ksp(libs.bumptech.compiler)
        implementation(libs.wasabeef.transformation)
    }

    coroutines = Group {
        implementation(libs.kotlinx.coroutines)
        implementation(libs.kotlinx.coroutinesAndroid)
    }

    lifecycle = Group {
        implementation(libs.androidx.lifecycle.runtime)
        implementation(libs.androidx.lifecycle.viewmodel)
        implementation(libs.androidx.lifecycle.compose)
    }

    material = Group {
        implementation(libs.google.material)
    }

    constraintLayout = Group {
        implementation(libs.androidx.constraintlayout)
    }

    core = Group {
        implementation(libs.androidx.core)
    }

    appcompat = Group {
        implementation(libs.androidx.appcompat)
    }

    fragment = Group {
        implementation(libs.androidx.fragment)
    }

    collection = Group {
        implementation(libs.androidx.collection)
    }

    unitTesting = Group {
        testImplementation(libs.junit.api)
        testImplementation(libs.junit.engine)
    }

    androidTesting = Group {
        implementation(libs.androidx.test.junit)
        implementation(libs.androidx.test.espresso)
    }

    swipe = Group {
        implementation(libs.androidx.swiperefreshlayout)
    }

    navigation = Group {
        implementation(libs.androidx.navigation.fragment)
        implementation(libs.androidx.navigation.ui)
    }

    room = Group {
        implementation(libs.androidx.room.runtime)
        ksp(libs.androidx.room.compilier)
    }

    composer = Group {
        implementation platform(libs.androidx.compose.bom)
        implementation(libs.androidx.compose.ui.ui)
        implementation(libs.androidx.compose.ui.util)
        implementation(libs.androidx.compose.ui.graphics)
        implementation(libs.androidx.compose.ui.preview)
        implementation(libs.androidx.compose.ui.tooling)
        implementation(libs.androidx.compose.material3)
        implementation(libs.androidx.compose.material)
        implementation(libs.androidx.compose.icons)
        implementation(libs.androidx.compose.icons.extended)
        implementation(libs.androidx.activity.compose)
        implementation(libs.lottie.compose)
        implementation(libs.reorderable)
    }

    mock = Group {
        testImplementation(libs.mockk.mockk)
    }

    zoomable = Group {
        implementation(libs.engawapg.zoomable)
    }

    firebase = Group {
        implementation(libs.google.firebase.bom)
        implementation(libs.google.firebase.analytics)
        implementation(libs.google.firebase.crashlytics)
        implementation(libs.google.firebase.config)
    }

    coil = Group {
        implementation(libs.coil.compose)
    }

    datastore = Group {
        implementation libs.androidx.datastore.preferences
    }

    crypto = Group {
        implementation libs.androidx.security.crypto
        implementation libs.google.tink
        implementation libs.protobuf.javalite
    }

    leakCanary = Group {
        debugImplementation libs.leak.canary
        qaImplementation libs.leak.canary
    }
}
