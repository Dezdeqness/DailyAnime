def Group(closure) {
    closure.delegate = dependencies
    return closure
}

ext {
    dagger = Group {
        implementation deps.dagger.dagger
        kapt deps.dagger.daggerCompiler
    }

    network = Group {
        implementation deps.retrofit.retrofit
        implementation deps.retrofit.retrofitMoshi

        implementation deps.okhttp.okhttp
        implementation deps.okhttp.okhttpLogInterceptor

    }

    chucker = Group {
        debugImplementation deps.chucker.chucker
        releaseImplementation deps.chucker.chuckerNoOp
    }

    glide = Group {
        implementation deps.glide.glide
        kapt deps.glide.glideCompiler
        implementation deps.glide.glideTransformations
    }

    coroutines = Group {
        implementation deps.coroutines.coroutines
        implementation deps.coroutines.coroutinesAndroid
    }

    lifecycle = Group {
        implementation deps.lifecycle.runtime
        implementation deps.lifecycle.viewmodel
    }

    material = Group {
        implementation deps.material.material
    }

    constraintLayout = Group {
        implementation deps.constraintLayout.constraintLayout
    }

    core = Group {
        implementation deps.core.core
    }

    appcompat = Group {
        implementation deps.appcompat.appcompat
    }

    fragment = Group {
        implementation deps.fragment.fragment
    }

    collection = Group {
        implementation deps.collection.collection
    }

    unitTesting = Group {
        testImplementation deps.unitTesting.junitCore
        testImplementation deps.unitTesting.junitApi
        testImplementation deps.unitTesting.junitLauncher
        testRuntimeOnly deps.unitTesting.junitEngine
    }

    androidTesting = Group {
        implementation deps.androidTesting.androidJunit
        implementation deps.androidTesting.espresso
    }

    swipe = Group {
        implementation deps.swipeRefresh.swipeLayout
    }

    navigation = Group {
        implementation deps.navigation.navigationFragment
        implementation deps.navigation.navigationCore
    }

    room = Group {
        implementation deps.room.room
        kapt deps.room.roomCompiler
    }

    composer = Group {
        implementation deps.compose.ui
        implementation deps.compose.util
        implementation deps.compose.graphics
        implementation deps.compose.preview
        implementation deps.compose.material3
        implementation platform(deps.compose.bom)
        implementation deps.compose.activity
        debugImplementation deps.compose.tooling
        implementation deps.compose.coil
    }
}
